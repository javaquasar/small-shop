<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/cache
       http://www.springframework.org/schema/cache/spring-cache.xsd">

    <context:component-scan base-package="just4.fun.smallshop.services"/>
    <context:component-scan base-package="just4.fun.smallshop.session"/>
    <context:component-scan base-package="just4.fun.smallshop.dao"/>

    <context:annotation-config/>

    <context:property-placeholder location="classpath*:data.properties"/>

    <cache:annotation-driven />

    <bean name="cacheManager" class="org.springframework.cache.concurrent.ConcurrentMapCacheManager">
        <constructor-arg value="categories"/>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="${data.hibernate.url}" />
        <property name="username" value="${data.hibernate.username}" />
        <property name="password" value="${data.hibernate.password}" />
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="just4.fun.smallshop.model"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${data.hibernate.dialect}</prop>
                <prop key="hibernate.connection.driver_class">org.postgresql.Driver</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">${data.hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${data.hibernate.show_sql}</prop>
                <prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.impl.FSDirectoryProvider</prop>
                <prop key="hibernate.search.default.indexBase">/home/zinchenko/work/projects/zinjvi/small-shop-indexes</prop>

                <!--<prop key="hibernate.cache.use_second_level_cache">true</prop>-->
                <!--<prop key="hibernate.cache.use_query_cache">true</prop>-->
                <!--<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.redis.SingletonRedisRegionFactory</prop>-->
                <!--<prop key="hibernate.cache.region_prefix">hibernate</prop>-->
                <!--<prop key="hibernate.generate_statistics">true</prop>-->
                <!--<prop key="hibernate.cache.use_structured_entries">true</prop>-->
                <!--<prop key="hibernate.transaction.factory_class">org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory</prop>-->
                <!--<prop key="hibernate.cache.provider_configuration_file_resource_path">hibernate-redis.properties</prop>-->
                <!--<prop key="hibernate.cache.use_query_cache">true</prop>-->
            </props>
        </property>
    </bean>

</beans>